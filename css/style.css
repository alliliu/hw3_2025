/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav a:hover, nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip a {
  position: absolute;
  top: -40px; /* hidden link by default */
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip a:focus {
  top: 20px; 
}

/* Step 3: Write selector/rule property to style all elements when in focus*/
*:focus {
  border: 2px solid black; /* Adds a solid black border */
}


/* Step 4: Write selector/rule property to style the container */
.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  row-gap: 15px;
}


/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid and place it in the grid. */

/* 
- child selector (>) between element and/or previous selector
- first-child is a pseudo-class: special state of element; in this case getting the first element among a group of sibling elements
*/

.container div:first-child { 
  grid-column: 1 / -1; /* start line/end line - makes sure first child takes up all columns */
  background-image: url("../images/header.jpg");
  background-attachment: fixed; /* parallax effect: image stays in place while text moves over it */
}

/* 
- background-attachment citation: https://www.w3schools.com/howto/howto_css_parallax.asp 
*/


/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine seletors*/
.about, .method, .clients, .contact {
  grid-column: 2 / span 1; /* sent start / end value */
  /* span - fill in the gap */
}

.about {
  grid-row: 2 / span 1; 
}

.method {
  grid-row: 3 / span 1; 
}

.clients {
  grid-row: 4 / span 1; 
}

.contact {
  grid-row: 5 / span 1; 
}

.about-image, .method-image, .clients-image, .contact-image{
  grid-column: 1 / -1; /* cover all columns */
  max-height: 600px; 
  overflow: hidden; /* hide content that goes outside of grid cell */
}
/* W3 schools overflow: https://www.w3schools.com/css/css_overflow.asp */

.about-image { 
  grid-row: 2 / span 1; 
}

.method-image { 
  grid-row: 3 / span 1; 
}

.clients-image { 
  grid-row: 4 / span 1; 
}

.contact-image { 
  grid-row: 5 / span 1; 
}

 /* Step 8: Write the selector/rule property to style the .text-block class. */

 /* diff between self, items, content? */

.text-block {
  display: grid;
  text-align: center;
  justify-self: center; 
  align-self: center;

}

/* Add your media query here */

@media (min-width: 800px) {
  
  /* Step 9: Write the selector/rule property to style the nav element */

  nav {
    display: grid;
    text-align: right; /* move to other side of window */
    padding: 30px 0;
  }

  /* Step 10: Write the selector/rule property to update the .container class */

  .container {
    display: grid;
    grid-template-columns: 50px auto 500px auto 50px;
  }

  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/

  .about, .clients, .method-image, .contact-image {
    grid-column: 3 / span 2;
  }

  .method, .contact, .about-image, .clients-image {
    grid-column: 2 / span 2;
  }

  /* span 2: element takes up 2 columns instead of just one */

  /* Step 13: Write the selector/rule property to update the .text-block class */

.text-block {
  max-height: 250px;
  overflow: scroll;
}

}


